// Framework grid generation

@mixin make-grid-columns($i: 1, $list: ".grid_#{$i}\@xs, .grid_#{$i}\@sm, .grid_#{$i}\@md, .grid_#{$i}\@lg") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .grid_#{$i}\@xs, .grid_#{$i}\@sm, .grid_#{$i}\@md, .grid_#{$i}\@lg";
  }
  #{$list} {
    position: relative;
    min-height: 1px;
    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
  }
}


@mixin float-grid-columns($class, $i: 1, $list: ".grid_#{$i}\@#{$class}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .grid_#{$i}\@#{$class}";
  }
  #{$list} {
    float: left;
  }
}


@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .grid_#{$index}\@#{$class} {
      width: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index > 0) {
    .grid_#{$index}-push\@#{$class} {
      left: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index == 0) {
    .grid_#{$index}-push0\@#{$class} {
      left: auto;
    }
  }
  @if ($type == pull) and ($index > 0) {
    .grid_#{$index}-pull\@#{$class} {
      right: percentage(($index / $grid-columns));
    }
  }
  @if ($type == pull) and ($index == 0) {
    .grid_#{$index}-pull0\@#{$class} {
      right: auto;
    }
  }
  @if ($type == offset) {
    .grid_#{$index}-offset\@#{$class} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
}

@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}


@mixin make-grid($class) {
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width);
  // @include loop-grid-columns($grid-columns, $class, pull);
  // @include loop-grid-columns($grid-columns, $class, push);
  // @include loop-grid-columns($grid-columns, $class, offset);
}
